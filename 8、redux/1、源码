export const createStore=(reducer)=>{
    let state;
    let listeners = [];

    // 组件订阅某个监听函数，当状态发生变化时，能够通知，一般在componentWillMount时订阅
       他返回一个可以取消订阅的函数，一般需要在组件卸载componentWillUnMount时取消订阅
    let subscribe = (listener)=>{
        listeners.push(listener);
        return ()=>{
            listeners = listeners.filter(l=>l!==listener);
        }
    }

    // 根据组件提交的action修改老状态为新状态，并发布给订阅他的组件
    let dispatch = (action)=>{
        state = reducer(state,action);
        listeners.forEach(listener=>listener());
    }


    let getState = ()=>{
        return state;
    }

    dispatch();

    return {
        getState,       //返回状态
        subscribe,      //订阅
        dispatch        //发布
    }
}
