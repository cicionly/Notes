1、首先需要安装express
    npm install --save express
2、在server文件加下新建server.js, 代码如下
    var express = require("express")
    var app = express();

    app.get('/', function(req, res) {
        res.send('hello world'); 
    });
    app.listen(3001)
3、执行当前的js文件
    node server/server.js
4、在浏览器输入http://localhost:3001 就可以看到页面加载出 hello world

5、也可使用npm管理包，在package.json的scripts加入
    "mock": "node ./mock/server.js"
    只需要执行 npm run mock 就可以启动服务

接下来就是引入mockJs ,首先安装mockjs
npm install --save-dev mockjs
我们在mock的目录下面新建test.js加入代码，mock的语法这里不说了。请看mock文档的讲述，有很多知识点。
var Mock = require("mockjs")
var express = require("express")
var router = express.Router();

router.use("/profile",function (req,res) {
    console.log(req.body);
    //调用mock方法模拟数据
    var data = Mock.mock({
            // 属性 list 的值是一个数组，其中含有 1 到 10 个元素
            'list|1-10': [{
                // 属性 id 是一个自增数，起始值为 1，每次增 1
                'id|+1': 1
            }]
        }
    );
    return res.json(data);
})

module.exports = router;

这时候修改server.js文件的内容，代码如下
var express = require("express")
var app = express();

var router = express.Router();

app.get('/', function(req, res) {
    res.send('hello world');
});

router.use("/test",require('./test'));
app.use("/api",router)
app.listen(3001)

在浏览器的输入http://localhost:3001/api/test/profile即可看到输出的JSON数据列表

在React中使用
fetch("/api/test/profile",{
    method:"GET",
 credentials: 'include'
}).then((response)=>{
    console.log(response);
   
    return response.json()
}).then((response)=>{
    console.log(response)
}).catch((error)=>{
    console.log(error)
})

这时候重启react项目的服务器，点击按钮发送请求，就可以成功输出接口数据。

修改server.js
var express = require("express")
var app = express();
var bodyParser = require('body-parser');

app.use(bodyParser.json());  //body-parser 解析json格式数据
app.use(bodyParser.urlencoded({            //此项必须在 bodyParser.json 下面,为参数编码
    extended: true
}));

var router = express.Router();

app.get('/', function(req, res) {
    res.send('hello world');
});

router.use("/test",require('./test'));

app.use("/api",router)

app.listen(3001)

接收参数req.body
修改react的请求
const params = {
    id: "id",
}
fetch("/api/test/profile", {
    method: "POST",
    credentials: 'include',
    headers: {"Content-Type": "application/json"},
    body: JSON.stringify(params)
}).then((response) => {
    console.log(response);
    return response.json()
}).then((response) => {
    console.log(response)
}).catch((error) => {
    console.log(error)
})

刷新项目。点击按钮发送请求，就可以成功输出接口数据。
